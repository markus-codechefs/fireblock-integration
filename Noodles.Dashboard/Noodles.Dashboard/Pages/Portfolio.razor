@page "/portfolio"
@inject IJSRuntime JS

<PageTitle>Portfolio</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="mb-2">Portfolio</h1>
            <p class="text-muted">Monitor your crypto portfolio and market trends</p>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">BTC Market Overview</h5>
                    <div class="chart-container">
                        <canvas id="btcChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Portfolio Summary</h5>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Total Value</span>
                        <span class="h4 mb-0">$@portfolioValue.ToString("N2")</span>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-muted">Monthly Performance</span>
                        <span class="@GetPerformanceClass() h5 mb-0">@monthlyPerformance %</span>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Quick Actions</h5>
                    <div class="d-grid gap-2">
                        <button class="btn btn-primary">Buy Crypto</button>
                        <button class="btn btn-outline-primary">Send Funds</button>
                        <button class="btn btn-outline-secondary">View History</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">BTC News Feed</h5>
                    <div class="row">
                        @foreach(var item in btcNews)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="p-3 border rounded">
                                    <a href="@item.Url" target="_blank" class="text-decoration-none">
                                        <h6 class="mb-2">@item.Title</h6>
                                        <small class="text-muted">Read more →</small>
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private decimal portfolioValue = 15234.75m;
    private decimal monthlyPerformance = 3.5m;

    private List<NewsItem> btcNews = new();
    private List<decimal> btcPrices = new() { 27000, 27350, 26800, 27500, 28000 };
    private List<string> btcCategories = new() { "Mon", "Tue", "Wed", "Thu", "Fri" };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadChartAsync();
            await LoadNewsAsync();
            StateHasChanged();
        }
    }

    private async Task LoadChartAsync()
    {
        var chartData = new
        {
            type = "line",
            data = new
            {
                labels = btcCategories.ToArray(),
                datasets = new[]
                {
                    new
                    {
                        label = "BTC Price (USD)",
                        data = btcPrices.ToArray(),
                        borderColor = "#6366f1",
                        backgroundColor = "rgba(99, 102, 241, 0.1)",
                        tension = 0.4,
                        fill = true,
                        borderWidth = 3
                    }
                }
            },
            options = new
            {
                responsive = true,
                maintainAspectRatio = false,
                plugins = new
                {
                    title = new
                    {
                        display = false
                    },
                    legend = new
                    {
                        display = false
                    }
                },
                scales = new
                {
                    y = new
                    {
                        beginAtZero = false,
                        grid = new
                        {
                            color = "rgba(0, 0, 0, 0.05)"
                        },
                        ticks = new
                        {
                            callback = "function(value) { return '$' + value.toLocaleString(); }"
                        }
                    },
                    x = new
                    {
                        grid = new
                        {
                            display = false
                        }
                    }
                },
                elements = new
                {
                    point = new
                    {
                        radius = 0,
                        hoverRadius = 6
                    }
                }
            }
        };

        await JS.InvokeVoidAsync("renderChart", "btcChart", chartData);
    }

    private async Task LoadNewsAsync()
    {
        // For demo purposes, mock data
        btcNews = new List<NewsItem>
        {
            new NewsItem { Title = "Bitcoin breaks $28,000 resistance level", Url = "https://news.bitcoin.com" },
            new NewsItem { Title = "ETF inflows continue to boost BTC sentiment", Url = "https://cointelegraph.com" },
            new NewsItem { Title = "Whale alert: Large BTC movements detected", Url = "https://cryptobriefing.com" }
        };
    }

    private string GetPerformanceClass() =>
        monthlyPerformance >= 0 ? "text-success" : "text-danger";

    class NewsItem
    {
        public string Title { get; set; } = string.Empty;
        public string Url { get; set; } = string.Empty;
    }
}
