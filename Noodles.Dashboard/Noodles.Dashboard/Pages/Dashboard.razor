@page "/dashboard"
@inject IJSRuntime JS

<PageTitle>Dashboard</PageTitle>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">BTC Market Overview</h5>
                <div style="height: 400px; position: relative;">
                    <canvas id="btcChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card p-3 mb-3">
            <h5>Portfolio Value</h5>
            <p>$@portfolioValue</p>

            <h6>Monthly Performance</h6>
            <p class="@GetPerformanceClass()">@monthlyPerformance %</p>
        </div>
    </div>
</div>

<div class="mt-4">
    <h5>BTC News Feed</h5>
    <ul>
        @foreach(var item in btcNews)
        {
            <li><a href="@item.Url" target="_blank">@item.Title</a></li>
        }
    </ul>
</div>

@code {
    private decimal portfolioValue = 15234.75m;
    private decimal monthlyPerformance = 3.5m;

    private List<NewsItem> btcNews = new();
    private List<decimal> btcPrices = new() { 27000, 27350, 26800, 27500, 28000 };
    private List<string> btcCategories = new() { "Mon", "Tue", "Wed", "Thu", "Fri" };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadChartAsync();
            await LoadNewsAsync();
            StateHasChanged();
        }
    }

    private async Task LoadChartAsync()
    {
        var chartData = new
        {
            type = "line",
            data = new
            {
                labels = btcCategories.ToArray(),
                datasets = new[]
                {
                    new
                    {
                        label = "BTC Price (USD)",
                        data = btcPrices.ToArray(),
                        borderColor = "rgb(75, 192, 192)",
                        backgroundColor = "rgba(75, 192, 192, 0.2)",
                        tension = 0.1,
                        fill = true
                    }
                }
            },
            options = new
            {
                responsive = true,
                maintainAspectRatio = false,
                plugins = new
                {
                    title = new
                    {
                        display = true,
                        text = "Bitcoin Price Trend"
                    }
                },
                scales = new
                {
                    y = new
                    {
                        beginAtZero = false,
                        title = new
                        {
                            display = true,
                            text = "Price (USD)"
                        }
                    }
                }
            }
        };

        await JS.InvokeVoidAsync("renderChart", "btcChart", chartData);
    }

    private async Task LoadNewsAsync()
    {
        // For demo purposes, mock data
        btcNews = new List<NewsItem>
        {
            new NewsItem { Title = "Bitcoin breaks $28,000", Url = "https://news.bitcoin.com" },
            new NewsItem { Title = "ETF inflows boost BTC", Url = "https://cointelegraph.com" },
            new NewsItem { Title = "Whale alert: large BTC moves", Url = "https://cryptobriefing.com" }
        };
    }

    private string GetPerformanceClass() =>
        monthlyPerformance >= 0 ? "text-success" : "text-danger";

    class NewsItem
    {
        public string Title { get; set; } = string.Empty;
        public string Url { get; set; } = string.Empty;
    }
}
